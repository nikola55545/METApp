{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport backgroundImage from \"../assets/bglogin.png\";\nimport user from \"../assets/login-icons/ic_username.png\";\nimport password from \"../assets/login-icons/ic_password.png\";\nimport banner from \"../assets/banner.png\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { get } from \"react-native/Libraries/Utilities/PixelRatio\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar axios = require(\"axios\").default;\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this);\n\n    _this.login = function () {\n      _this.props.navigation.replace(\"Pocetna\");\n    };\n\n    _this.storeData = function _callee(email, password) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"email\", _this.state.email));\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"password\", _this.state.password));\n\n            case 5:\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.getData = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"email\"));\n\n            case 3:\n              e = _context2.sent;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"password\"));\n\n            case 6:\n              p = _context2.sent;\n\n              _this.setState({\n                email: e\n              });\n\n              _this.setState({\n                password: p\n              });\n\n              console.log(_this.state.email);\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    };\n\n    _this.autoLogin = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(_this.getData());\n\n            case 2:\n              console.log(\"E\" + _this.state.email);\n              console.log(\"P\" + _this.state.password);\n\n              if (_this.state.email != \"\" && _this.state.password != \"\") {\n                _this.login();\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      shouldShow: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"updateValue\",\n    value: function updateValue(text, field) {\n      if (field == \"email\") {\n        this.setState({\n          email: text\n        });\n      } else if (field == \"password\") {\n        this.setState({\n          password: text\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(KeyboardAvoidingView, {\n        behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n        style: styles.container,\n        children: [_jsx(StatusBar, {\n          style: \"light\"\n        }), _jsx(ImageBackground, {\n          source: backgroundImage,\n          style: styles.bgimage,\n          children: _jsxs(View, {\n            style: styles.loginForm,\n            children: [_jsx(Text, {\n              style: styles.heading,\n              children: \"DOBRO DO\\u0160LI\"\n            }), _jsxs(View, {\n              style: styles.section,\n              children: [_jsx(Image, {\n                source: user,\n                style: styles.inputImage\n              }), _jsx(TextInput, {\n                style: styles.textInput,\n                placeholder: \"Korisni\\u010Dko ime\",\n                numberOfLines: 1,\n                underlineColorAndroid: \"transparent\",\n                placeholderTextColor: \"white\",\n                value: this.state.email,\n                onChangeText: function onChangeText(text) {\n                  return _this2.updateValue(text, \"email\");\n                }\n              })]\n            }), _jsxs(View, {\n              style: styles.section,\n              children: [_jsx(Image, {\n                source: password,\n                style: styles.inputImage\n              }), _jsx(TextInput, {\n                style: styles.textInput,\n                placeholder: \"Lozinka\",\n                underlineColorAndroid: \"transparent\",\n                placeholderTextColor: \"white\",\n                secureTextEntry: true,\n                value: this.state.password,\n                onChangeText: function onChangeText(text) {\n                  return _this2.updateValue(text, \"password\");\n                }\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: styles.loginButton,\n              onPress: this.login,\n              children: _jsx(Text, {\n                style: {\n                  color: \"#c9093d\"\n                },\n                children: \"PRIJAVITE SE\"\n              })\n            }), this.state.shouldShow && _jsx(TouchableOpacity, {\n              style: styles.loginButton,\n              onPress: this.autoLogin,\n              children: _jsx(Text, {\n                style: {\n                  color: \"#c9093d\"\n                },\n                children: \"AUTO LOGIN\"\n              })\n            })]\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  bgimage: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  loginForm: {\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  heading: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"white\",\n    marginBottom: 30,\n    marginTop: 200\n  },\n  section: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    borderWidth: 1,\n    color: \"white\",\n    borderColor: \"white\",\n    height: 50,\n    width: \"80%\",\n    borderRadius: 5,\n    margin: 10\n  },\n  inputImage: {\n    padding: 10,\n    margin: 5,\n    height: 30,\n    width: 30,\n    resizeMode: \"stretch\",\n    alignItems: \"center\"\n  },\n  textInput: {\n    flex: 1,\n    color: \"white\",\n    marginLeft: 10\n  },\n  loginButton: {\n    backgroundColor: \"white\",\n    borderRadius: 100,\n    paddingTop: 18,\n    paddingBottom: 18,\n    paddingStart: 90,\n    paddingEnd: 90,\n    marginTop: 30\n  },\n  banner: {\n    position: \"absolute\",\n    top: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/nikol/Desktop/MetApp/MetApp/components/Login.js"],"names":["StatusBar","React","Component","useEffect","useState","NavigationContainer","useNavigation","createNativeStackNavigator","backgroundImage","user","password","banner","AsyncStorage","get","axios","require","default","Login","login","props","navigation","replace","storeData","email","setItem","state","console","log","getData","getItem","e","p","setState","autoLogin","shouldShow","text","field","Platform","OS","styles","container","bgimage","loginForm","heading","section","inputImage","textInput","updateValue","loginButton","color","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","resizeMode","fontSize","fontWeight","marginBottom","marginTop","flexDirection","borderWidth","borderColor","borderRadius","margin","padding","marginLeft","paddingTop","paddingBottom","paddingStart","paddingEnd","position","top"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ImageBackground,\r\n  Image,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  SafeAreaView,\r\n  Alert,\r\n  KeyboardAvoidingView,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport React, { Component, useEffect, useState } from \"react\";\r\n\r\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n\r\nimport backgroundImage from \"../assets/bglogin.png\";\r\nimport user from \"../assets/login-icons/ic_username.png\";\r\nimport password from \"../assets/login-icons/ic_password.png\";\r\nimport banner from \"../assets/banner.png\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { get } from \"react-native/Libraries/Utilities/PixelRatio\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\nexport default class Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      shouldShow: false,\r\n    };\r\n  }\r\n\r\n  updateValue(text, field) {\r\n    if (field == \"email\") {\r\n      this.setState({ email: text });\r\n    } else if (field == \"password\") {\r\n      this.setState({ password: text });\r\n    }\r\n  }\r\n\r\n  //Viktor kod\r\n  login = () => {\r\n    // DEV MODE:\r\n    this.props.navigation.replace(\"Pocetna\");\r\n    // SERVER MODE\r\n    // const baseURL = \"http://109.92.116.113:5000/\";\r\n    // axios\r\n    //   .post(\r\n    //     baseURL,\r\n    //     { email: this.state.email, password: this.state.password },\r\n    //     {\r\n    //       headers: {\r\n    //         \"Content-Type\": \"application/json\",\r\n    //       },\r\n    //     }\r\n    //   )\r\n    //   .then((response) => {\r\n    //     console.log(response.data);\r\n    //     if (response.data.success) {\r\n    //       this.storeData(this.state.email, this.state.password);\r\n    //       this.props.navigation.navigate(\"Pocetna\");\r\n    //     } else {\r\n    //       alert(response.data.message);\r\n    //     }\r\n    //   });\r\n  };\r\n\r\n  storeData = async (email, password) => {\r\n    try {\r\n      await AsyncStorage.setItem(\"email\", this.state.email);\r\n      await AsyncStorage.setItem(\"password\", this.state.password);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //UBACUJE SACUVANE PODATKE U STATE\r\n  getData = async () => {\r\n    try {\r\n      e = await AsyncStorage.getItem(\"email\");\r\n      p = await AsyncStorage.getItem(\"password\");\r\n      this.setState({ email: e });\r\n      this.setState({ password: p });\r\n\r\n      console.log(this.state.email);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // POZVATI OVU FUNKCIJU JEDNOM KAD SE POKRENE APP\r\n  autoLogin = async () => {\r\n    await this.getData();\r\n    console.log(\"E\" + this.state.email);\r\n    console.log(\"P\" + this.state.password);\r\n    if (this.state.email != \"\" && this.state.password != \"\") {\r\n      this.login();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n        style={styles.container}\r\n      >\r\n        <StatusBar style=\"light\" />\r\n        <ImageBackground source={backgroundImage} style={styles.bgimage}>\r\n          <View style={styles.loginForm}>\r\n            <Text style={styles.heading}>DOBRO DOŠLI</Text>\r\n\r\n            <View style={styles.section}>\r\n              <Image source={user} style={styles.inputImage} />\r\n              <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Korisničko ime\"\r\n                numberOfLines={1}\r\n                underlineColorAndroid={\"transparent\"}\r\n                placeholderTextColor=\"white\"\r\n                value={this.state.email}\r\n                onChangeText={(text) => this.updateValue(text, \"email\")}\r\n              />\r\n            </View>\r\n            <View style={styles.section}>\r\n              <Image source={password} style={styles.inputImage} />\r\n              <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Lozinka\"\r\n                underlineColorAndroid={\"transparent\"}\r\n                placeholderTextColor=\"white\"\r\n                secureTextEntry\r\n                value={this.state.password}\r\n                onChangeText={(text) => this.updateValue(text, \"password\")}\r\n              />\r\n            </View>\r\n\r\n            <TouchableOpacity style={styles.loginButton} onPress={this.login}>\r\n              <Text style={{ color: \"#c9093d\" }}>PRIJAVITE SE</Text>\r\n            </TouchableOpacity>\r\n            {this.state.shouldShow &&\r\n              <TouchableOpacity\r\n                style={styles.loginButton}\r\n                onPress={this.autoLogin}\r\n              >\r\n                <Text style={{ color: \"#c9093d\" }}>AUTO LOGIN</Text>\r\n              </TouchableOpacity>\r\n            }\r\n\r\n          </View>\r\n        </ImageBackground>\r\n      </KeyboardAvoidingView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  bgimage: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    resizeMode: \"contain\",\r\n  },\r\n  loginForm: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  heading: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    marginBottom: 30,\r\n    marginTop: 200,\r\n  },\r\n  section: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 1,\r\n    color: \"white\",\r\n    borderColor: \"white\",\r\n    height: 50,\r\n    width: \"80%\",\r\n    borderRadius: 5,\r\n    margin: 10,\r\n  },\r\n  inputImage: {\r\n    padding: 10,\r\n    margin: 5,\r\n    height: 30,\r\n    width: 30,\r\n    resizeMode: \"stretch\",\r\n    alignItems: \"center\",\r\n  },\r\n  textInput: {\r\n    flex: 1,\r\n    color: \"white\",\r\n    marginLeft: 10,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 100,\r\n    paddingTop: 18,\r\n    paddingBottom: 18,\r\n    paddingStart: 90,\r\n    paddingEnd: 90,\r\n    marginTop: 30,\r\n  },\r\n  banner: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}