{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport LottieView from 'lottie-react-native';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar vw = Dimensions.get('window').width * 0.01;\nvar vh = Dimensions.get('window').height * 0.01;\n\nvar AnimatedPullToRefresh = function (_Component) {\n  _inherits(AnimatedPullToRefresh, _Component);\n\n  var _super = _createSuper(AnimatedPullToRefresh);\n\n  function AnimatedPullToRefresh(props) {\n    var _this$props$duration, _this$props$pullHeigh;\n\n    var _this;\n\n    _classCallCheck(this, AnimatedPullToRefresh);\n\n    _this = _super.call(this, props);\n\n    _this._handleStartShouldSetPanResponder = function (e, gestureState) {\n      return !_this.state.isScrollFree;\n    };\n\n    _this._handleMoveShouldSetPanResponder = function (e, gestureState) {\n      return !_this.state.isScrollFree;\n    };\n\n    _this._handlePanResponderMove = function (e, gestureState) {\n      if (!_this.props.isRefreshing) {\n        if (gestureState.dy >= 0 && _this.state.scrollY._value === 0) {\n          _this.state.refreshHeight.setValue(-1 * gestureState.dy * .35);\n\n          if (!_this.state.showPullAnim) _this.setState({\n            showPullAnim: true\n          });\n        } else {\n          _this.refs.scrollComponentRef.scrollTo({\n            y: -1 * gestureState.dy,\n            animated: true\n          });\n\n          if (_this.state.showPullAnim) {\n            LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n\n            _this.setState({\n              showPullAnim: false\n            });\n          }\n        }\n      }\n    };\n\n    _this._handlePanResponderEnd = function (e, gestureState) {\n      if (!_this.props.isRefreshing) {\n        if (_this.state.refreshHeight._value <= -_this.PULLHEIGHT) {\n          _this.onScrollRelease();\n\n          Animated.parallel([Animated.spring(_this.state.refreshHeight, {\n            toValue: -_this.PULLHEIGHT\n          }), Animated.timing(_this.state.initAnimationProgress, {\n            toValue: 1,\n            duration: 1000\n          })]).start(function () {\n            _this.state.initAnimationProgress.setValue(0);\n\n            LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n\n            _this.setState({\n              isRefreshAnimationStarted: true,\n              showPullAnim: false\n            });\n\n            _this.onRepeatAnimation();\n          });\n        } else if (_this.state.refreshHeight._value <= 0) {\n          Animated.spring(_this.state.refreshHeight, {\n            toValue: 0\n          }).start(function () {\n            LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n\n            _this.setState({\n              showPullAnim: false\n            });\n          });\n        }\n\n        if (_this.state.scrollY._value > 0) {\n          _this.setState({\n            isScrollFree: true\n          });\n        }\n      }\n    };\n\n    _this.onRepeatAnimation = function () {\n      _this.state.repeatAnimationProgress.setValue(0);\n\n      Animated.timing(_this.state.repeatAnimationProgress, {\n        toValue: 1,\n        easing: Easing.linear,\n        duration: _this.DURATION\n      }).start(function () {\n        if (_this.props.isRefreshing) {\n          _this.onRepeatAnimation();\n        } else {\n          _this.state.repeatAnimationProgress.setValue(0);\n\n          _this.onEndAnimation();\n        }\n      });\n    };\n\n    _this.onEndAnimation = function () {\n      _this.setState({\n        isRefreshAnimationEnded: true\n      });\n\n      Animated.sequence([Animated.timing(_this.state.finalAnimationProgress, {\n        toValue: 1,\n        easing: Easing.linear,\n        duration: _this.DURATION\n      }), Animated.spring(_this.state.refreshHeight, {\n        toValue: 0,\n        bounciness: 12\n      })]).start(function () {\n        _this.state.finalAnimationProgress.setValue(0);\n\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n\n        _this.setState({\n          isRefreshAnimationEnded: false,\n          isRefreshAnimationStarted: false,\n          showPullAnim: false\n        });\n      });\n    };\n\n    _this.onScrollRelease = function () {\n      if (!_this.props.isRefreshing) {\n        _this.props.onRefresh();\n      }\n    };\n\n    _this.isScrolledToTop = function () {\n      if (_this.state.scrollY._value === 0 && _this.state.isScrollFree) {\n        _this.setState({\n          isScrollFree: false\n        });\n      }\n    };\n\n    _this.onRefresh = function () {\n      Animated.parallel([Animated.spring(_this.state.refreshHeight, {\n        toValue: -_this.PULLHEIGHT,\n        bounciness: 12\n      }), Animated.timing(_this.state.initAnimationProgress, {\n        toValue: 1,\n        duration: _this.DURATION,\n        easing: Easing.linear\n      })]).start(function () {\n        _this.state.initAnimationProgress.setValue(0);\n\n        _this.setState({\n          isRefreshAnimationStarted: true,\n          showPullAnim: false\n        });\n\n        _this.onRepeatAnimation();\n      });\n    };\n\n    _this._renderAnimations = function (animationStyle, animateProgress) {\n      if (_this.state.showPullAnim) {\n        return _jsx(Animated.View, {\n          style: [animationStyle],\n          children: _jsx(LottieView, {\n            source: _this.props.pullAnimationSource,\n            progress: animateProgress\n          })\n        });\n      } else {\n        if (_this.props.isRefreshing && !_this.state.isRefreshAnimationStarted) {\n          return _jsx(Animated.View, {\n            style: [animationStyle],\n            children: _jsx(LottieView, {\n              style: [{\n                opacity: _this.props.isRefreshing && !_this.state.isRefreshAnimationStarted ? 1 : 0\n              }],\n              source: _this.props.startRefreshAnimationSource,\n              progress: _this.state.initAnimationProgress\n            })\n          });\n        }\n\n        if (_this.state.isRefreshAnimationStarted && !_this.state.isRefreshAnimationEnded) {\n          return _jsx(Animated.View, {\n            style: [animationStyle],\n            children: _jsx(LottieView, {\n              style: [{\n                opacity: _this.state.isRefreshAnimationStarted && !_this.state.isRefreshAnimationEnded ? 1 : 0\n              }],\n              source: _this.props.refreshAnimationSource,\n              progress: _this.state.repeatAnimationProgress\n            })\n          });\n        }\n\n        if (_this.state.isRefreshAnimationEnded) {\n          return _jsx(Animated.View, {\n            style: [animationStyle],\n            children: _jsx(LottieView, {\n              style: [{\n                opacity: _this.state.isRefreshAnimationEnded ? 1 : 0\n              }],\n              source: _this.props.endRefreshAnimationSource,\n              progress: _this.state.finalAnimationProgress\n            })\n          });\n        } else {\n          return null;\n        }\n      }\n    };\n\n    _this.state = {\n      scrollY: new Animated.Value(0),\n      refreshHeight: new Animated.Value(0),\n      isScrollFree: false,\n      showPullAnim: false,\n      isRefreshAnimationStarted: false,\n      isRefreshAnimationEnded: false,\n      initAnimationProgress: new Animated.Value(0),\n      repeatAnimationProgress: new Animated.Value(0),\n      finalAnimationProgress: new Animated.Value(0)\n    };\n    _this.DURATION = (_this$props$duration = _this.props.duration) != null ? _this$props$duration : 1500;\n    _this.PULLHEIGHT = (_this$props$pullHeigh = _this.props.pullHeight) != null ? _this$props$pullHeigh : 10 * vh;\n    UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n    return _this;\n  }\n\n  _createClass(AnimatedPullToRefresh, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: this._handleStartShouldSetPanResponder,\n        onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder,\n        onPanResponderMove: this._handlePanResponderMove,\n        onPanResponderRelease: this._handlePanResponderEnd,\n        onPanResponderTerminate: this._handlePanResponderEnd,\n        onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {}\n      });\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(props) {\n      if (this.props.isRefreshing !== props.isRefreshing) {\n        if (props.isRefreshing && !this.state.showPullAnim) {\n          this.onRefresh();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onScrollEvent = function onScrollEvent(event) {\n        _this2.state.scrollY.setValue(event.nativeEvent.contentOffset.y);\n      };\n\n      var animateHeight = this.state.refreshHeight.interpolate({\n        inputRange: [-this.PULLHEIGHT, 0],\n        outputRange: [this.PULLHEIGHT, 0]\n      });\n      var animateProgress = this.state.refreshHeight.interpolate({\n        inputRange: [-this.PULLHEIGHT, 0],\n        outputRange: [1, 0],\n        extrapolate: 'clamp'\n      });\n      var animationStyle = {\n        position: 'absolute',\n        backgroundColor: this.props.backgroundColor,\n        width: Dimensions.get('window').width,\n        height: animateHeight\n      };\n      return _jsxs(View, _objectSpread(_objectSpread({\n        style: {\n          width: Dimensions.get('window').width\n        }\n      }, this._panResponder.panHandlers), {}, {\n        children: [this._renderAnimations(animationStyle, animateProgress), _jsx(Animated.ScrollView, {\n          ref: \"scrollComponentRef\",\n          scrollEnabled: this.state.isScrollFree,\n          onScroll: onScrollEvent,\n          scrollEventThrottle: 16,\n          bounces: false,\n          onTouchEnd: this.isScrolledToTop,\n          onScrollEndDrag: this.isScrolledToTop,\n          style: {\n            transform: [{\n              translateY: !this.props.isRefreshing && !this.state.showPullAnim && this.state.refreshHeight >= 0 ? 0 : animateHeight\n            }]\n          },\n          children: React.cloneElement(this.props.renderElement, {\n            scrollEnabled: false,\n            ref: 'scrollComponentRef',\n            key: 'scm'\n          })\n        })]\n      }));\n    }\n  }]);\n\n  return AnimatedPullToRefresh;\n}(Component);\n\nAnimatedPullToRefresh.propTypes = {\n  isRefreshing: PropTypes.bool,\n  onRefresh: PropTypes.func,\n  pullHeight: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  renderElement: PropTypes.element,\n  duration: PropTypes.number,\n  pullAnimationSource: PropTypes.any,\n  startRefreshAnimationSource: PropTypes.any,\n  refreshAnimationSource: PropTypes.any,\n  endRefreshAnimationSource: PropTypes.any\n};\nexport default AnimatedPullToRefresh;","map":{"version":3,"sources":["C:/Users/nikol/Desktop/MetApp/MetApp/node_modules/react-native-animated-pull-to-refresh/src/AnimatedPullToRefresh/index.js"],"names":["React","Component","LottieView","PropTypes","vw","Dimensions","get","width","vh","height","AnimatedPullToRefresh","props","_handleStartShouldSetPanResponder","e","gestureState","state","isScrollFree","_handleMoveShouldSetPanResponder","_handlePanResponderMove","isRefreshing","dy","scrollY","_value","refreshHeight","setValue","showPullAnim","setState","refs","scrollComponentRef","scrollTo","y","animated","LayoutAnimation","configureNext","Presets","easeInEaseOut","_handlePanResponderEnd","PULLHEIGHT","onScrollRelease","Animated","parallel","spring","toValue","timing","initAnimationProgress","duration","start","isRefreshAnimationStarted","onRepeatAnimation","repeatAnimationProgress","easing","Easing","linear","DURATION","onEndAnimation","isRefreshAnimationEnded","sequence","finalAnimationProgress","bounciness","onRefresh","isScrolledToTop","_renderAnimations","animationStyle","animateProgress","pullAnimationSource","opacity","startRefreshAnimationSource","refreshAnimationSource","endRefreshAnimationSource","Value","pullHeight","UIManager","setLayoutAnimationEnabledExperimental","_panResponder","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","onPanResponderGrant","evt","onScrollEvent","event","nativeEvent","contentOffset","animateHeight","interpolate","inputRange","outputRange","extrapolate","position","backgroundColor","panHandlers","transform","translateY","cloneElement","renderElement","scrollEnabled","ref","key","propTypes","bool","func","number","string","element","any"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, PanResponder, Animated, Dimensions, UIManager, LayoutAnimation, Easing } from 'react-native'\r\nimport LottieView from 'lottie-react-native'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst vw = Dimensions.get('window').width * 0.01\r\nconst vh = Dimensions.get('window').height * 0.01\r\n\r\n\r\nclass AnimatedPullToRefresh extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scrollY: new Animated.Value(0),\r\n            refreshHeight: new Animated.Value(0),\r\n            isScrollFree: false,\r\n            showPullAnim: false,\r\n            isRefreshAnimationStarted: false,\r\n            isRefreshAnimationEnded: false,\r\n            initAnimationProgress: new Animated.Value(0),\r\n            repeatAnimationProgress: new Animated.Value(0),\r\n            finalAnimationProgress: new Animated.Value(0),\r\n        }\r\n\r\n        this.DURATION = this.props.duration ?? 1500\r\n        this.PULLHEIGHT = this.props.pullHeight ?? 10 * vh\r\n\r\n        UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        this._panResponder = PanResponder.create({\r\n            onStartShouldSetPanResponder: this._handleStartShouldSetPanResponder,\r\n            onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder,\r\n            onPanResponderMove: this._handlePanResponderMove,\r\n            onPanResponderRelease: this._handlePanResponderEnd,\r\n            onPanResponderTerminate: this._handlePanResponderEnd,\r\n            onPanResponderGrant: (evt, gestureState) => {\r\n\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    UNSAFE_componentWillReceiveProps(props) {\r\n\r\n        if (this.props.isRefreshing !== props.isRefreshing) {\r\n            if (props.isRefreshing && !this.state.showPullAnim) {\r\n                this.onRefresh()\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _handleStartShouldSetPanResponder = (e, gestureState) => {\r\n        return !this.state.isScrollFree;\r\n    }\r\n\r\n    _handleMoveShouldSetPanResponder = (e, gestureState) => {\r\n        return !this.state.isScrollFree;\r\n    }\r\n\r\n\r\n    _handlePanResponderMove = (e, gestureState) => {\r\n        if (!this.props.isRefreshing) {\r\n\r\n            if ((gestureState.dy >= 0 && this.state.scrollY._value === 0)) {\r\n\r\n                this.state.refreshHeight.setValue(-1 * gestureState.dy * .35);\r\n\r\n\r\n                if (!this.state.showPullAnim)\r\n                    this.setState({ showPullAnim: true })\r\n            } else {\r\n\r\n                this.refs.scrollComponentRef.scrollTo({ y: -1 * gestureState.dy, animated: true });\r\n                if (this.state.showPullAnim) {\r\n                    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut)\r\n                    this.setState({ showPullAnim: false })\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    _handlePanResponderEnd = (e, gestureState) => {\r\n        if (!this.props.isRefreshing) {\r\n            if (this.state.refreshHeight._value <= -this.PULLHEIGHT) {\r\n                this.onScrollRelease();\r\n                Animated.parallel([\r\n                    Animated.spring(this.state.refreshHeight, {\r\n                        toValue: -this.PULLHEIGHT\r\n                    }),\r\n                    Animated.timing(this.state.initAnimationProgress, {\r\n                        toValue: 1,\r\n                        duration: 1000\r\n                    })\r\n                ]).start(() => {\r\n                    this.state.initAnimationProgress.setValue(0);\r\n                    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut)\r\n                    this.setState({ isRefreshAnimationStarted: true, showPullAnim: false });\r\n                    this.onRepeatAnimation();\r\n\r\n                })\r\n            } else if (this.state.refreshHeight._value <= 0) {\r\n                Animated.spring(this.state.refreshHeight, {\r\n                    toValue: 0\r\n                }).start(() => {\r\n                    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut)\r\n                    this.setState({ showPullAnim: false })\r\n                });\r\n            }\r\n\r\n            if (this.state.scrollY._value > 0) {\r\n                this.setState({ isScrollFree: true });\r\n            }\r\n        }\r\n    }\r\n\r\n    onRepeatAnimation = () => {\r\n        this.state.repeatAnimationProgress.setValue(0);\r\n\r\n        Animated.timing(this.state.repeatAnimationProgress, {\r\n            toValue: 1,\r\n            easing: Easing.linear,\r\n            duration: this.DURATION\r\n        }).start(() => {\r\n            if (this.props.isRefreshing) {\r\n                this.onRepeatAnimation();\r\n            } else {\r\n                this.state.repeatAnimationProgress.setValue(0);\r\n                this.onEndAnimation();\r\n            }\r\n        })\r\n    }\r\n\r\n    onEndAnimation = () => {\r\n        this.setState({ isRefreshAnimationEnded: true });\r\n        Animated.sequence([\r\n            Animated.timing(this.state.finalAnimationProgress, {\r\n                toValue: 1,\r\n                easing: Easing.linear,\r\n                duration: this.DURATION\r\n            }),\r\n            Animated.spring(this.state.refreshHeight, {\r\n                toValue: 0,\r\n                bounciness: 12\r\n            })\r\n        ]).start(() => {\r\n            this.state.finalAnimationProgress.setValue(0);\r\n            LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut)\r\n            this.setState({\r\n                isRefreshAnimationEnded: false,\r\n                isRefreshAnimationStarted: false,\r\n                showPullAnim: false\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    onScrollRelease = () => {\r\n        if (!this.props.isRefreshing) {\r\n            this.props.onRefresh();\r\n        }\r\n    }\r\n\r\n    isScrolledToTop = () => {\r\n        if (this.state.scrollY._value === 0 && this.state.isScrollFree) {\r\n            this.setState({ isScrollFree: false });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    onRefresh = () => {\r\n\r\n        Animated.parallel([\r\n            Animated.spring(this.state.refreshHeight, {\r\n                toValue: -this.PULLHEIGHT,\r\n                bounciness: 12,\r\n            }),\r\n            Animated.timing(this.state.initAnimationProgress, {\r\n                toValue: 1,\r\n                duration: this.DURATION,\r\n                easing: Easing.linear\r\n            })\r\n        ]).start(() => {\r\n            this.state.initAnimationProgress.setValue(0);\r\n            this.setState({ isRefreshAnimationStarted: true, showPullAnim: false });\r\n            this.onRepeatAnimation();\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    _renderAnimations = (animationStyle, animateProgress) => {\r\n\r\n        if (this.state.showPullAnim) {\r\n\r\n            return <Animated.View style={[\r\n                animationStyle,\r\n            ]}>\r\n                <LottieView\r\n                    source={this.props.pullAnimationSource}\r\n                    progress={animateProgress}\r\n                />\r\n            </Animated.View>\r\n\r\n        }\r\n        else {\r\n\r\n\r\n\r\n            if (this.props.isRefreshing && !this.state.isRefreshAnimationStarted) {\r\n                return <Animated.View style={[\r\n                    animationStyle,\r\n                ]}>\r\n                    <LottieView\r\n                        style={[{ opacity: (this.props.isRefreshing && !this.state.isRefreshAnimationStarted) ? 1 : 0 }]}\r\n                        source={this.props.startRefreshAnimationSource}\r\n                        progress={this.state.initAnimationProgress}\r\n                    />\r\n                </Animated.View>\r\n            }\r\n\r\n            if (this.state.isRefreshAnimationStarted && !this.state.isRefreshAnimationEnded) {\r\n                return <Animated.View style={[\r\n                    animationStyle,\r\n                ]}>\r\n                    <LottieView\r\n                        style={[{ opacity: this.state.isRefreshAnimationStarted && !this.state.isRefreshAnimationEnded ? 1 : 0 }]}\r\n                        source={this.props.refreshAnimationSource}\r\n                        progress={this.state.repeatAnimationProgress}\r\n                    />\r\n                </Animated.View>\r\n            }\r\n\r\n            if (this.state.isRefreshAnimationEnded) {\r\n                return <Animated.View style={[\r\n                    animationStyle,\r\n                ]}>\r\n                    <LottieView\r\n                        style={[{ opacity: this.state.isRefreshAnimationEnded ? 1 : 0 }]}\r\n                        source={this.props.endRefreshAnimationSource}\r\n                        progress={this.state.finalAnimationProgress}\r\n                    />\r\n                </Animated.View>\r\n            }\r\n\r\n            else {\r\n                return null\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        let onScrollEvent = (event) => {\r\n            this.state.scrollY.setValue(event.nativeEvent.contentOffset.y)\r\n        };\r\n\r\n        let animateHeight = this.state.refreshHeight.interpolate({\r\n            inputRange: [-this.PULLHEIGHT, 0],\r\n            outputRange: [this.PULLHEIGHT, 0]\r\n        });\r\n\r\n        let animateProgress = this.state.refreshHeight.interpolate({\r\n            inputRange: [-this.PULLHEIGHT, 0],\r\n            outputRange: [1, 0],\r\n            extrapolate: 'clamp',\r\n        });\r\n\r\n\r\n\r\n        const animationStyle = {\r\n            position: 'absolute',\r\n            backgroundColor: this.props.backgroundColor,\r\n            width: Dimensions.get('window').width,\r\n            height: animateHeight\r\n        }\r\n\r\n\r\n        return (\r\n            <View\r\n                style={{\r\n                    width: Dimensions.get('window').width,\r\n                }}\r\n                {...this._panResponder.panHandlers}\r\n            >\r\n\r\n                {\r\n                    this._renderAnimations(animationStyle, animateProgress)\r\n                }\r\n\r\n\r\n                <Animated.ScrollView ref='scrollComponentRef'\r\n                    scrollEnabled={this.state.isScrollFree}\r\n                    onScroll={onScrollEvent}\r\n                    scrollEventThrottle={16}\r\n                    bounces={false}\r\n                    onTouchEnd={this.isScrolledToTop}\r\n                    onScrollEndDrag={this.isScrolledToTop}\r\n                    style={{\r\n                        transform: [{\r\n                            translateY: !this.props.isRefreshing && !this.state.showPullAnim && this.state.refreshHeight >= 0 ? 0 : animateHeight\r\n                        }]\r\n                    }}\r\n                >\r\n                    {React.cloneElement(this.props.renderElement, {\r\n                        scrollEnabled: false,\r\n                        ref: 'scrollComponentRef',\r\n                        key: 'scm'\r\n                    })}\r\n\r\n\r\n                </Animated.ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nAnimatedPullToRefresh.propTypes = {\r\n    isRefreshing: PropTypes.bool,\r\n    onRefresh: PropTypes.func,\r\n    pullHeight: PropTypes.number,\r\n    backgroundColor: PropTypes.string,\r\n    renderElement: PropTypes.element,\r\n    duration: PropTypes.number,\r\n    pullAnimationSource: PropTypes.any,\r\n    startRefreshAnimationSource: PropTypes.any,\r\n    refreshAnimationSource: PropTypes.any,\r\n    endRefreshAnimationSource: PropTypes.any,\r\n};\r\n\r\n\r\n\r\nexport default AnimatedPullToRefresh"]},"metadata":{},"sourceType":"module"}